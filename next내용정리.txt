page.js 메인 코드를 치는 파일

layout.js 파일에서 공통적으로 사용하는 코드를 이 파일에 넣으면 다른 파일에도 적용된다
+layout.js파일은 page.js파일을 감싸는 형식의 원리로 라우팅을 위해 파일속에 들어가 있는
  파일에도 같은방식으로 적용된다.
+하위폴더에서 layout.js을 사용할경우 상위폴더에는 영향을 미치진 않는다.

globals.css 파일은 메인 디자인 파일로 대부분의 디자인 코드는 이곳에 보관한다.

*라우팅:  라우팅이란 '주소/list'와 같이 다른 페이지로 넘어갈때 주소 옆에 폴더 이름이 들어감으로써
	페이지를 분류하는것이다

+라우팅하는법
  app폴더 안에 주소에 사용할것을 적은후 폴더 안에 page.js를 적음으로써 새로운 페이지를 하나 만들 수 있다.

Link는 그전에 사용했던 링크 이동방식인'<a>'대신하여 사용한다.
+'<a>'도 여전히 사용 가능하지만 Link를 사용할경우 훨씬 부드러운 사용이 가능하다.
+'import Link from "next/"' Link사용시 필수로 넣어줘야하는 코드이다
(예시:<Link href="/list">상품으로</Link> 형식으로 적을시 'next/list'와 같은 방식으로 이동한다).

반복문:map함수
사용법:
1.let으로 변수를 만들어 준다
2."만들어준 변수이름".map((a,i)=>{

}) 형식으로 만들어주고 괄호 안에 코드를 넣어주면 된다.
+map 함수 안에 'a'는 변수에 들어가 있는 데이터를 그대로 가져와준다.
+map 함수 안에 'i'는 변수에 들어가 있는 데이터의 양에 맞게 0부터 순서대로 올라가는 숫자를 가져와준다.

Image함수
인터넷 링크로 사진을 올릴 수 있는 방법으로 단점이 확실하여 최적화 시에만 사용한다.
+단점:1.사진의 사이즈를 확실히 알고 style로 가로세로길이를 같이 넣어줘야한다
      2.사진을 유동적으로 바꾸기 힘들다.

img함수
사진을 올릴 수 있는 방법중 하나로 최적화 전에는 이 방식으로 하는게 대부분이다.
<img src="파일경로"/>방식으로 사용한다.

컴포넌트:반복되는 코드를 깔끔하게 한단어로 줄이는 방법
사용법:
function '컴포넌트명'(){

}
+이런식으로 만들어진 클라이언트는 모두 서버 클라이언트이다
 하지만 서버 클라이언트는 js기능을 사용을 못하게 되어 있기 때문에 클라이언트 컴포넌트로 바꿔줘야한다.
클라이언트 컴포넌트 사용법:
function위에 'use client'를 적어주면 그 밑에 있는 모든 컴포넌트가 클라이언트 컴포넌트로 고정된다.
+클라이언트 컴포넌트의 단점:
js파일을 많이 사용하고 hydration을 필요로 하기 때문에 매우 느려지는 단점이 있다.
hydration:html 유저에게 보낸 후에 자바스크립트로 html 다시 읽고 분석하는 일
+큰 페이지는 server component를 사용하고 js기능 필요한 곳만 client component를 사용하면 최적화시킬 수 있다.


코드가 길어질 경우 파일을 분할하게 되는데 그럴 경우엔 
1. 파일 안에 새로운 파일.js를 만들어 주고 변수를 안에 넣어준다.
2. 변수를 export를 해줘야 한다. 하지 않을경우 다른파일에선 사용이 불가능하다.
3. "import 이름 from './파일.js'" 를 가져온 파일 위에 적어준다.

props문법:부모컴포넌트에 선언된 변수를 자식 컴포넌트에서도 사용할 수 있게해준다.
1.<자식Component 작명="전할테이터" />
2.자식은 props.작명 사용
+자식에서 부모로 보내거나 옆진간의 전송 불가능하다.